getwd()
#Load library
library(rgdal)
library(raster)
#Source external functions
source("./R/calculateNDVI.R")
source("./R/bitemporalComparison.R")
source("./R/cloudToNA.R")
#Create data and output folders and download data from URL
data_URL <- "https://www.dropbox.com/sh/3lz5vylc7tzpiup/AAB3HCFHdJFa8lV_PMRlV5Wda?dl=1"
data_folder <- "./data"
if (!dir.exists(data_folder)){
dir.create(data_folder)
}
if (!dir.exists('output')) {
dir.create('output')
}
if (!file.exists('./data/data.zip')) {
download.file(url = data_URL, destfile = './data/data.zip', method = 'auto')
unzip('./data/data.zip', exdir = './data')
}
#Create floders for landsat5 and landsat8 and unzip images
if (!dir.exists('./data/landsat5') | !dir.exists('./data/landsat8')){
dir.create('./data/landsat5')
dir.create('./data/landsat8')
}
if (!dir.exists('output')) {
dir.create('output')
}
if(file.exists('./data/LC81970242014109-SC20141230042441.tar.gz') | file.exists('./data/LT51980241990098-SC20150107121947.tar.gz')) {
untar('./data/LC81970242014109-SC20141230042441.tar.gz', exdir = './data/landsat8')
untar('./data/LT51980241990098-SC20150107121947.tar.gz', exdir = './data/landsat5')
}
#Stack NIR and Red bands layers
L5_stack<- stack('./data/landsat5/LT51980241990098KIS00_sr_band4.tif', './data/landsat5/LT51980241990098KIS00_sr_band3.tif', './data/landsat5/LT51980241990098KIS00_cfmask.tif')
L8_stack <- stack('./data/landsat8/LC81970242014109LGN00_sr_band5.tif', './data/landsat8/LC81970242014109LGN00_sr_band4.tif', './data/landsat8/LC81970242014109LGN00_cfmask.tif')
#Determine Wageningen extent and crop images
wageningen_extent <- extent(c(677365, 688190, 5757630, 5764179))
L5wageningen <- crop(L5_stack, wageningen_extent)
L8wageningen <- crop(L8_stack, wageningen_extent)
#Extract colud mask raster layer
L5_cloud <- L5wageningen[[3]]
L8_cloud <- L8wageningen[[3]]
# Remove clould mask layer from the Landsat Stack
L5_nir_red <- dropLayer(L5wageningen, 3)
L8_nir_red <- dropLayer(L8wageningen, 3)
# Mask out the values in the pixels where no clouds were detected
L5_cloudfree <- overlay(x = L5_nir_red, y = L5_cloud, fun = cloud2NA)
L8_cloudfree <- overlay(x = L8_nir_red, y = L8_cloud, fun = cloud2NA)
plot(L5_cloudfree[[1]])
plot(L5_cloudfree[[2]])
plot(L5_cloud)
source('~/Desktop/Assignment1-starter/main.R', echo=TRUE)
source('~/Desktop/Assignment1-starter/main.R', echo=TRUE)
L5_nir_red <- dropLayer(L5wageningen, 3)
L8_nir_red <- dropLayer(L8wageningen, 3)
L5_cloudfree <- overlay(x = L5_nir_red, y = L5_cloud, fun = cloud2NA)
L8_cloudfree <- overlay(x = L8_nir_red, y = L8_cloud, fun = cloud2NA)
# Geoscripting 2020
# Team ==> Fried Plantain
# Week 1 Assignment
# Solution
# 10/1/2020
#Load library
library(rgdal)
library(raster)
#Source external functions
source("./R/calculateNDVI.R")
source("./R/bitemporalComparison.R")
source("./R/cloudToNA.R")
#Create data and output folders and download data from URL
data_URL <- "https://www.dropbox.com/sh/3lz5vylc7tzpiup/AAB3HCFHdJFa8lV_PMRlV5Wda?dl=1"
data_folder <- "./data"
if (!dir.exists(data_folder)){
dir.create(data_folder)
}
if (!dir.exists('output')) {
dir.create('output')
}
if (!file.exists('./data/data.zip')) {
download.file(url = data_URL, destfile = './data/data.zip', method = 'auto')
unzip('./data/data.zip', exdir = './data')
}
#Create floders for landsat5 and landsat8 and unzip images
if (!dir.exists('./data/landsat5') | !dir.exists('./data/landsat8')){
dir.create('./data/landsat5')
dir.create('./data/landsat8')
}
if (!dir.exists('output')) {
dir.create('output')
}
if(file.exists('./data/LC81970242014109-SC20141230042441.tar.gz') | file.exists('./data/LT51980241990098-SC20150107121947.tar.gz')) {
untar('./data/LC81970242014109-SC20141230042441.tar.gz', exdir = './data/landsat8')
untar('./data/LT51980241990098-SC20150107121947.tar.gz', exdir = './data/landsat5')
}
#Stack NIR and Red bands layers
L5_stack<- stack('./data/landsat5/LT51980241990098KIS00_sr_band4.tif', './data/landsat5/LT51980241990098KIS00_sr_band3.tif', './data/landsat5/LT51980241990098KIS00_cfmask.tif')
L8_stack <- stack('./data/landsat8/LC81970242014109LGN00_sr_band5.tif', './data/landsat8/LC81970242014109LGN00_sr_band4.tif', './data/landsat8/LC81970242014109LGN00_cfmask.tif')
#Determine Wageningen extent and crop images
wageningen_extent <- extent(c(677365, 688190, 5757630, 5764179))
L5wageningen <- crop(L5_stack, wageningen_extent)
L8wageningen <- crop(L8_stack, wageningen_extent)
#Extract colud mask raster layer
L5_cloud <- L5wageningen[[3]]
L8_cloud <- L8wageningen[[3]]
plot(L5_cloud)
# Remove clould mask layer from the Landsat Stack
L5_nir_red <- dropLayer(L5wageningen, 3)
L8_nir_red <- dropLayer(L8wageningen, 3)
# Mask out the values in the pixels where no clouds were detected
L5_cloudfree <- overlay(x = L5_nir_red, y = L5_cloud, fun = cloud2NA)
L8_cloudfree <- overlay(x = L8_nir_red, y = L8_cloud, fun = cloud2NA)
# Estimate NDVI
# Geoscripting 2020
# Team ==> Fried Plantain
# Week 1 Assignment
# Solution
# 10/1/2020
#Load library
library(rgdal)
library(raster)
#Source external functions
source("./R/calculateNDVI.R")
source("./R/bitemporalComparison.R")
source("./R/cloudToNA.R")
#Create data and output folders and download data from URL
data_URL <- "https://www.dropbox.com/sh/3lz5vylc7tzpiup/AAB3HCFHdJFa8lV_PMRlV5Wda?dl=1"
data_folder <- "./data"
if (!dir.exists(data_folder)){
dir.create(data_folder)
}
if (!dir.exists('output')) {
dir.create('output')
}
if (!file.exists('./data/data.zip')) {
download.file(url = data_URL, destfile = './data/data.zip', method = 'auto')
unzip('./data/data.zip', exdir = './data')
}
#Create floders for landsat5 and landsat8 and unzip images
if (!dir.exists('./data/landsat5') | !dir.exists('./data/landsat8')){
dir.create('./data/landsat5')
dir.create('./data/landsat8')
}
if (!dir.exists('output')) {
dir.create('output')
}
if(file.exists('./data/LC81970242014109-SC20141230042441.tar.gz') | file.exists('./data/LT51980241990098-SC20150107121947.tar.gz')) {
untar('./data/LC81970242014109-SC20141230042441.tar.gz', exdir = './data/landsat8')
untar('./data/LT51980241990098-SC20150107121947.tar.gz', exdir = './data/landsat5')
}
#Stack NIR and Red bands layers
L5_stack<- stack('./data/landsat5/LT51980241990098KIS00_sr_band4.tif', './data/landsat5/LT51980241990098KIS00_sr_band3.tif', './data/landsat5/LT51980241990098KIS00_cfmask.tif')
L8_stack <- stack('./data/landsat8/LC81970242014109LGN00_sr_band5.tif', './data/landsat8/LC81970242014109LGN00_sr_band4.tif', './data/landsat8/LC81970242014109LGN00_cfmask.tif')
#Determine Wageningen extent and crop images
wageningen_extent <- extent(c(677365, 688190, 5757630, 5764179))
L5wageningen <- crop(L5_stack, wageningen_extent)
L8wageningen <- crop(L8_stack, wageningen_extent)
#Extract colud mask raster layer
L5_cloud <- L5wageningen[[3]]
L8_cloud <- L8wageningen[[3]]
plot(L5_cloud)
# Remove clould mask layer from the Landsat Stack
L5_nir_red <- dropLayer(L5wageningen, 3)
L8_nir_red <- dropLayer(L8wageningen, 3)
# Mask out the values in the pixels where no clouds were detected
L5_cloudfree <- overlay(x = L5_nir_red, y = L5_cloud, fun = cloud2NA)
L8_cloudfree <- overlay(x = L8_nir_red, y = L8_cloud, fun = cloud2NA)
# Estimate NDVI
library("roxygen2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.6")
?@param
?param
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.6")
devtools::document()
library("testthat", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.6")
detach("package:rgdal", unload=TRUE)
library("rgdal", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.6")
detach("package:rgdal", unload=TRUE)
library("rgdal", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.6")
detach("package:raster", unload=TRUE)
library("raster", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.6")
devtools::document()
devtools::document()
rlang::last_error()
devtools::document()
devtools::document()
?overlay
library("raster", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.6")
library("rgdal", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.6")
# Geoscripting 2020
# Team ==> Fried Plantain
# Week 1 Assignment
# Solution
# 10/1/2020
#Load library
library(rgdal)
library(raster)
#Source external functions
source("./R/calculateNDVI.R")
source("./R/bitemporalComparison.R")
source("./R/cloudToNA.R")
#Create data and output folders and download data from URL
data_URL <- "https://www.dropbox.com/sh/3lz5vylc7tzpiup/AAB3HCFHdJFa8lV_PMRlV5Wda?dl=1"
data_folder <- "./data"
if (!dir.exists(data_folder)){
dir.create(data_folder)
}
if (!dir.exists('output')) {
dir.create('output')
}
if (!file.exists('./data/data.zip')) {
download.file(url = data_URL, destfile = './data/data.zip', method = 'auto')
unzip('./data/data.zip', exdir = './data')
}
#Create floders for landsat5 and landsat8 and unzip images
if (!dir.exists('./data/landsat5') | !dir.exists('./data/landsat8')){
dir.create('./data/landsat5')
dir.create('./data/landsat8')
}
if (!dir.exists('output')) {
dir.create('output')
}
if(file.exists('./data/LC81970242014109-SC20141230042441.tar.gz') | file.exists('./data/LT51980241990098-SC20150107121947.tar.gz')) {
untar('./data/LC81970242014109-SC20141230042441.tar.gz', exdir = './data/landsat8')
untar('./data/LT51980241990098-SC20150107121947.tar.gz', exdir = './data/landsat5')
}
#Stack NIR and Red bands layers
L5_stack<- stack('./data/landsat5/LT51980241990098KIS00_sr_band4.tif', './data/landsat5/LT51980241990098KIS00_sr_band3.tif', './data/landsat5/LT51980241990098KIS00_cfmask.tif')
L8_stack <- stack('./data/landsat8/LC81970242014109LGN00_sr_band5.tif', './data/landsat8/LC81970242014109LGN00_sr_band4.tif', './data/landsat8/LC81970242014109LGN00_cfmask.tif')
#Determine Wageningen extent and crop images
wageningen_extent <- extent(c(677365, 688190, 5757630, 5764179))
L5wageningen <- crop(L5_stack, wageningen_extent)
L8wageningen <- crop(L8_stack, wageningen_extent)
#Extract colud mask raster layer
L5_cloud <- L5wageningen[[3]]
L8_cloud <- L8wageningen[[3]]
plot(L5_cloud)
# Remove clould mask layer from the Landsat Stack
L5_nir_red <- dropLayer(L5wageningen, 3)
L8_nir_red <- dropLayer(L8wageningen, 3)
# Mask out the values in the pixels where no clouds were detected
L5_cloudfree <- overlay(x = L5_nir_red, y = L5_cloud, fun = cloud2NA)
L8_cloudfree <- overlay(x = L8_nir_red, y = L8_cloud, fun = cloud2NA)
# Estimate NDVI
#L5NDVI <- overlay(x = L5_cloudfree   calculateNDVI()
L5_cloudfree
L5NDVI <- overlay(x = L5_cloudfree[[2]], y = L5_cloudfree[[1]], fun = calculateNDVI)
L8NDVI <- overlay(x = L8_cloudfree[[2]], y = L8_cloudfree[[1]], fun = calculateNDVI)
L8NDVI
plot(L8NDVI)
bitemporal <- overlay(x = L5NDVI, y=L8NDVI, fun = bitemporalComparison)
#Carry out temporal comparison between 30 years in Wageningen
bitemporal <- overlay(x = L5NDVI, y=L8NDVI, fun = bitemporalComparison)
#Carry out temporal comparison between 30 years in Wageningen
bitemporal <- overlay(x = L5NDVI, y = L8NDVI, fun = bitemporalComparison)
bitemporal <- overlay(x = L5NDVI, y = L8NDVI, fun = bitemporalComparison)
bitemporalComparison(L5NDVI, L8NDVI)
bitemporalComparison(L5NDVI, L8NDVI)
L5NDVI <- overlay(x = L5_cloudfree[[2]], y = L5_cloudfree[[1]], fun = calculateNDVI)
L8NDVI <- overlay(x = L8_cloudfree[[2]], y = L8_cloudfree[[1]], fun = calculateNDVI)
